// Autogenerated, do not edit

#include <fonts/GeneratedFont.hpp>

FONT_TABLE_LOCATION_FLASH_PRAGMA
KEEP extern const touchgfx::GlyphNode glyphs_RobotoCondensed_Regular_10_4bpp[] FONT_TABLE_LOCATION_FLASH_ATTRIBUTE = {
    {     0, 0x0020,   0,   0,   0,   0,   2,   0,   0, 0x00 }, // space
    {     0, 0x0021,   2,   8,   8,   0,   2,   0,   0, 0x00 }, // exclam
    {     8, 0x0022,   3,   3,   9,   0,   3,   0,   4, 0x00 }, // quotedbl
    {    14, 0x0023,   5,   8,   8,   0,   5,   0,   0, 0x00 }, // numbersign
    {    38, 0x0024,   5,  10,   9,   0,   5,   0,   0, 0x00 }, // dollar
    {    68, 0x0025,   7,   8,   8,   0,   7,   0,   0, 0x00 }, // percent
    {   100, 0x0026,   6,   8,   8,   0,   6,   0,   0, 0x00 }, // ampersand
    {   124, 0x0027,   2,   3,   9,   0,   2,   4,   4, 0x00 }, // quotesingle
    {   127, 0x0028,   3,  12,   9,   0,   3,   0,   0, 0x00 }, // parenleft
    {   151, 0x0029,   3,  12,   9,   0,   3,   0,   0, 0x00 }, // parenright
    {   175, 0x002A,   4,   5,   8,   0,   4,   0,   0, 0x00 }, // asterisk
    {   185, 0x002B,   5,   6,   7,   0,   5,   0,   0, 0x00 }, // plus
    {   203, 0x002C,   2,   3,   2,   0,   2,   8,  10, 0x00 }, // comma
    {   206, 0x002D,   3,   1,   4,   0,   3,  18,   1, 0x00 }, // hyphen
    {   208, 0x002E,   2,   2,   2,   0,   2,  19,  10, 0x00 }, // period
    {   210, 0x002F,   4,   9,   8,   0,   3,  29,   1, 0x00 }, // slash
    {   228, 0x0030,   5,   8,   8,   0,   5,   0,   0, 0x00 }, // zero
    {   252, 0x0031,   4,   9,   9,   0,   5,   0,   0, 0x00 }, // one
    {   270, 0x0032,   5,   8,   8,   0,   5,   0,   0, 0x00 }, // two
    {   294, 0x0033,   5,   8,   8,   0,   5,   0,   0, 0x00 }, // three
    {   318, 0x0034,   5,   8,   8,   0,   5,   0,   0, 0x00 }, // four
    {   342, 0x0035,   5,   8,   8,   0,   5,   0,   0, 0x00 }, // five
    {   366, 0x0036,   5,   8,   8,   0,   5,   0,   0, 0x00 }, // six
    {   390, 0x0037,   5,   8,   8,   0,   5,   0,   0, 0x00 }, // seven
    {   414, 0x0038,   5,   8,   8,   0,   5,   0,   0, 0x00 }, // eight
    {   438, 0x0039,   5,   8,   8,   0,   5,   0,   0, 0x00 }, // nine
    {   462, 0x003A,   2,   6,   6,   0,   2,   0,   0, 0x00 }, // colon
    {   468, 0x003B,   2,   8,   6,   0,   2,   0,   0, 0x00 }, // semicolon
    {   476, 0x003C,   4,   6,   6,   0,   4,   0,   0, 0x00 }, // less
    {   488, 0x003D,   5,   3,   5,   0,   5,   0,   0, 0x00 }, // equal
    {   497, 0x003E,   5,   6,   6,   0,   4,   0,   0, 0x00 }, // greater
    {   515, 0x003F,   4,   8,   8,   0,   4,   0,   0, 0x00 }, // question
    {   531, 0x0040,   8,  10,   8,   0,   8,   0,   0, 0x00 }, // at
    {   571, 0x0041,   6,   8,   8,   0,   6,  30,   1, 0x00 }, // A
    {   595, 0x0042,   5,   8,   8,   0,   5,   0,   0, 0x00 }, // B
    {   619, 0x0043,   5,   8,   8,   0,   5,   0,   0, 0x00 }, // C
    {   643, 0x0044,   6,   8,   8,   0,   6,   0,   0, 0x00 }, // D
    {   667, 0x0045,   5,   8,   8,   0,   5,   0,   0, 0x00 }, // E
    {   691, 0x0046,   5,   8,   8,   0,   5,   0,   0, 0x00 }, // F
    {   715, 0x0047,   6,   8,   8,   0,   6,   0,   0, 0x00 }, // G
    {   739, 0x0048,   6,   8,   8,   0,   6,   0,   0, 0x00 }, // H
    {   763, 0x0049,   2,   8,   8,   0,   3,   0,   0, 0x00 }, // I
    {   771, 0x004A,   5,   8,   8,   0,   5,  31,   3, 0x00 }, // J
    {   795, 0x004B,   6,   8,   8,   0,   6,   0,   0, 0x00 }, // K
    {   819, 0x004C,   5,   8,   8,   0,   5,   0,   0, 0x00 }, // L
    {   843, 0x004D,   7,   8,   8,   0,   7,   0,   0, 0x00 }, // M
    {   875, 0x004E,   6,   8,   8,   0,   6,   0,   0, 0x00 }, // N
    {   899, 0x004F,   6,   8,   8,   0,   6,   0,   0, 0x00 }, // O
    {   923, 0x0050,   6,   8,   8,   0,   6,   0,   0, 0x00 }, // P
    {   947, 0x0051,   6,   9,   8,   0,   6,   0,   0, 0x00 }, // Q
    {   974, 0x0052,   6,   8,   8,   0,   6,   0,   0, 0x00 }, // R
    {   998, 0x0053,   5,   8,   8,   0,   5,   0,   0, 0x00 }, // S
    {  1022, 0x0054,   5,   8,   8,   0,   5,  34,   2, 0x00 }, // T
    {  1046, 0x0055,   6,   8,   8,   0,   6,   0,   0, 0x00 }, // U
    {  1070, 0x0056,   6,   8,   8,   0,   5,  36,   1, 0x00 }, // V
    {  1094, 0x0057,   8,   8,   8,   0,   8,  37,   1, 0x00 }, // W
    {  1126, 0x0058,   6,   8,   8,   0,   5,   0,   0, 0x00 }, // X
    {  1150, 0x0059,   6,   8,   8,   0,   5,  38,   1, 0x00 }, // Y
    {  1174, 0x005A,   5,   8,   8,   0,   5,   0,   0, 0x00 }, // Z
    {  1198, 0x005B,   3,  11,   9,   0,   2,   0,   0, 0x00 }, // bracketleft
    {  1220, 0x005C,   4,   9,   8,   0,   4,   0,   0, 0x00 }, // backslash
    {  1238, 0x005D,   2,  11,   9,   0,   2,   0,   0, 0x00 }, // bracketright
    {  1249, 0x005E,   4,   4,   8,   0,   4,   0,   0, 0x00 }, // asciicircum
    {  1257, 0x005F,   4,   1,   0,   0,   4,   0,   0, 0x00 }, // underscore
    {  1259, 0x0060,   3,   2,   9,   0,   3,   0,   0, 0x00 }, // grave
    {  1263, 0x0061,   5,   6,   6,   0,   5,  39,   1, 0x00 }, // a
    {  1281, 0x0062,   5,   9,   9,   0,   5,   0,   0, 0x00 }, // b
    {  1308, 0x0063,   5,   6,   6,   0,   5,   0,   0, 0x00 }, // c
    {  1326, 0x0064,   5,   9,   9,   0,   5,   0,   0, 0x00 }, // d
    {  1353, 0x0065,   5,   6,   6,   0,   5,   0,   0, 0x00 }, // e
    {  1371, 0x0066,   3,   9,   9,   0,   3,   0,   0, 0x00 }, // f
    {  1389, 0x0067,   5,   8,   6,   0,   5,   0,   0, 0x00 }, // g
    {  1413, 0x0068,   5,   9,   9,   0,   5,   0,   0, 0x00 }, // h
    {  1440, 0x0069,   2,   9,   9,   0,   2,   0,   0, 0x00 }, // i
    {  1449, 0x006A,   3,  11,   9,  -1,   2,   0,   0, 0x00 }, // j
    {  1471, 0x006B,   5,   9,   9,   0,   5,   0,   0, 0x00 }, // k
    {  1498, 0x006C,   2,   9,   9,   0,   2,   0,   0, 0x00 }, // l
    {  1507, 0x006D,   7,   6,   6,   0,   7,  40,   1, 0x00 }, // m
    {  1531, 0x006E,   5,   6,   6,   0,   5,  41,   1, 0x00 }, // n
    {  1549, 0x006F,   5,   6,   6,   0,   5,   0,   0, 0x00 }, // o
    {  1567, 0x0070,   5,   8,   6,   0,   5,  42,   1, 0x00 }, // p
    {  1591, 0x0071,   5,   8,   6,   0,   5,   0,   0, 0x00 }, // q
    {  1615, 0x0072,   3,   6,   6,   0,   3,   0,   0, 0x00 }, // r
    {  1627, 0x0073,   4,   6,   6,   0,   4,  43,   1, 0x00 }, // s
    {  1639, 0x0074,   3,   8,   8,   0,   3,   0,   0, 0x00 }, // t
    {  1655, 0x0075,   5,   6,   6,   0,   5,   0,   0, 0x00 }, // u
    {  1673, 0x0076,   5,   6,   6,   0,   4,  44,   1, 0x00 }, // v
    {  1691, 0x0077,   7,   6,   6,   0,   6,   0,   0, 0x00 }, // w
    {  1715, 0x0078,   5,   6,   6,   0,   4,   0,   0, 0x00 }, // x
    {  1733, 0x0079,   5,   8,   6,   0,   4,  45,   1, 0x00 }, // y
    {  1757, 0x007A,   4,   6,   6,   0,   4,   0,   0, 0x00 }, // z
    {  1769, 0x007B,   3,  11,   9,   0,   3,   0,   0, 0x00 }, // braceleft
    {  1791, 0x007C,   2,  10,   8,   0,   2,   0,   0, 0x00 }, // bar
    {  1801, 0x007D,   3,  11,   9,   0,   3,   0,   0, 0x00 }, // braceright
    {  1823, 0x007E,   6,   2,   4,   0,   6,   0,   0, 0x00 }  // asciitilde
};

// RobotoCondensed_Regular_10_4bpp
FONT_TABLE_LOCATION_FLASH_PRAGMA
KEEP extern const touchgfx::GlyphNode glyphs_RobotoCondensed_Regular_10_4bpp[] FONT_TABLE_LOCATION_FLASH_ATTRIBUTE;
FONT_GLYPH_LOCATION_FLASH_PRAGMA
KEEP extern const uint8_t unicodes_RobotoCondensed_Regular_10_4bpp_0[] FONT_GLYPH_LOCATION_FLASH_ATTRIBUTE;
FONT_SEARCHTABLE_LOCATION_FLASH_PRAGMA
KEEP extern const uint8_t* const unicodes_RobotoCondensed_Regular_10_4bpp[] FONT_SEARCHTABLE_LOCATION_FLASH_ATTRIBUTE = {
    unicodes_RobotoCondensed_Regular_10_4bpp_0
};
FONT_KERNING_LOCATION_FLASH_PRAGMA
KEEP extern const touchgfx::KerningNode kerning_RobotoCondensed_Regular_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_RobotoCondensed_Regular_10_4bpp();

touchgfx::GeneratedFont& getFont_RobotoCondensed_Regular_10_4bpp()
{
    static touchgfx::GeneratedFont RobotoCondensed_Regular_10_4bpp(glyphs_RobotoCondensed_Regular_10_4bpp, 95, 13, 10, 0, 0, 4, 1, 1, 1, unicodes_RobotoCondensed_Regular_10_4bpp, kerning_RobotoCondensed_Regular_10_4bpp, 63, 0, 0, 0);
    return RobotoCondensed_Regular_10_4bpp;
}
