// Autogenerated, do not edit

#include <fonts/GeneratedFont.hpp>

FONT_TABLE_LOCATION_FLASH_PRAGMA
KEEP extern const touchgfx::GlyphNode glyphs_RobotoCondensed_Regular_15_4bpp[] FONT_TABLE_LOCATION_FLASH_ATTRIBUTE = {
    {     0, 0x0020,   0,   0,   0,   0,   3,   0,   0, 0x00 }, // space
    {     0, 0x0021,   2,  11,  11,   1,   3,   0,   0, 0x00 }, // exclam
    {    11, 0x0022,   4,   4,  11,   0,   4,   0,   4, 0x00 }, // quotedbl
    {    19, 0x0023,   8,  11,  11,   0,   8,   0,   0, 0x00 }, // numbersign
    {    63, 0x0024,   7,  14,  12,   0,   7,   0,   0, 0x00 }, // dollar
    {   119, 0x0025,  10,  11,  11,   0,  10,   0,   0, 0x00 }, // percent
    {   174, 0x0026,   9,  11,  11,   0,   9,   0,   0, 0x00 }, // ampersand
    {   229, 0x0027,   2,   4,  11,   0,   2,   4,   4, 0x00 }, // quotesingle
    {   233, 0x0028,   5,  16,  12,   0,   4,   0,   0, 0x00 }, // parenleft
    {   281, 0x0029,   4,  16,  12,   0,   4,   0,   0, 0x00 }, // parenright
    {   313, 0x002A,   6,   6,  11,   0,   6,   0,   0, 0x00 }, // asterisk
    {   331, 0x002B,   7,   8,   9,   0,   8,   0,   0, 0x00 }, // plus
    {   363, 0x002C,   3,   4,   2,   0,   3,   8,  12, 0x00 }, // comma
    {   371, 0x002D,   4,   2,   5,   0,   4,  20,   1, 0x00 }, // hyphen
    {   375, 0x002E,   2,   2,   2,   1,   4,  21,  12, 0x00 }, // period
    {   377, 0x002F,   5,  12,  11,   0,   5,  33,   1, 0x00 }, // slash
    {   413, 0x0030,   7,  11,  11,   0,   7,   0,   0, 0x00 }, // zero
    {   457, 0x0031,   4,  11,  11,   1,   7,   0,   0, 0x00 }, // one
    {   479, 0x0032,   7,  11,  11,   0,   7,   0,   0, 0x00 }, // two
    {   523, 0x0033,   7,  11,  11,   0,   7,   0,   0, 0x00 }, // three
    {   567, 0x0034,   7,  11,  11,   0,   7,   0,   0, 0x00 }, // four
    {   611, 0x0035,   7,  11,  11,   0,   7,   0,   0, 0x00 }, // five
    {   655, 0x0036,   7,  11,  11,   0,   7,   0,   0, 0x00 }, // six
    {   699, 0x0037,   7,  11,  11,   0,   7,   0,   0, 0x00 }, // seven
    {   743, 0x0038,   7,  11,  11,   0,   7,   0,   0, 0x00 }, // eight
    {   787, 0x0039,   7,  11,  11,   0,   7,   0,   0, 0x00 }, // nine
    {   831, 0x003A,   2,   8,   8,   1,   3,   0,   0, 0x00 }, // colon
    {   839, 0x003B,   3,  10,   8,   0,   3,   0,   0, 0x00 }, // semicolon
    {   859, 0x003C,   6,   8,   8,   0,   7,   0,   0, 0x00 }, // less
    {   883, 0x003D,   7,   5,   7,   0,   7,   0,   0, 0x00 }, // equal
    {   903, 0x003E,   7,   8,   8,   0,   7,   0,   0, 0x00 }, // greater
    {   935, 0x003F,   6,  11,  11,   0,   6,   0,   0, 0x00 }, // question
    {   968, 0x0040,  12,  14,  11,   0,  12,   0,   0, 0x00 }, // at
    {  1052, 0x0041,   9,  11,  11,   0,   8,  34,   4, 0x00 }, // A
    {  1107, 0x0042,   7,  11,  11,   1,   8,   0,   0, 0x00 }, // B
    {  1151, 0x0043,   8,  11,  11,   0,   8,   0,   0, 0x00 }, // C
    {  1195, 0x0044,   7,  11,  11,   1,   8,   0,   0, 0x00 }, // D
    {  1239, 0x0045,   7,  11,  11,   1,   7,   0,   0, 0x00 }, // E
    {  1283, 0x0046,   7,  11,  11,   1,   7,   0,   0, 0x00 }, // F
    {  1327, 0x0047,   8,  11,  11,   0,   9,   0,   0, 0x00 }, // G
    {  1371, 0x0048,   8,  11,  11,   1,   9,   0,   0, 0x00 }, // H
    {  1415, 0x0049,   2,  11,  11,   1,   4,   0,   0, 0x00 }, // I
    {  1426, 0x004A,   7,  11,  11,   0,   7,  38,   4, 0x00 }, // J
    {  1470, 0x004B,   8,  11,  11,   1,   8,   0,   0, 0x00 }, // K
    {  1514, 0x004C,   6,  11,  11,   1,   7,   0,   0, 0x00 }, // L
    {  1547, 0x004D,   9,  11,  11,   1,  11,   0,   0, 0x00 }, // M
    {  1602, 0x004E,   8,  11,  11,   1,   9,   0,   0, 0x00 }, // N
    {  1646, 0x004F,   8,  11,  11,   0,   9,   0,   0, 0x00 }, // O
    {  1690, 0x0050,   7,  11,  11,   1,   8,   0,   0, 0x00 }, // P
    {  1734, 0x0051,   9,  13,  11,   0,   9,   0,   0, 0x00 }, // Q
    {  1799, 0x0052,   7,  11,  11,   1,   9,   0,   0, 0x00 }, // R
    {  1843, 0x0053,   8,  11,  11,   0,   8,   0,   0, 0x00 }, // S
    {  1887, 0x0054,   8,  11,  11,   0,   7,  42,   3, 0x00 }, // T
    {  1931, 0x0055,   8,  11,  11,   0,   9,  45,   1, 0x00 }, // U
    {  1975, 0x0056,   8,  11,  11,   0,   8,  46,   2, 0x00 }, // V
    {  2019, 0x0057,  11,  11,  11,   0,  11,  48,   1, 0x00 }, // W
    {  2085, 0x0058,   8,  11,  11,   0,   8,   0,   0, 0x00 }, // X
    {  2129, 0x0059,   8,  11,  11,   0,   8,  49,   2, 0x00 }, // Y
    {  2173, 0x005A,   7,  11,  11,   0,   7,   0,   0, 0x00 }, // Z
    {  2217, 0x005B,   4,  15,  12,   0,   4,   0,   0, 0x00 }, // bracketleft
    {  2247, 0x005C,   6,  12,  11,   0,   5,   0,   0, 0x00 }, // backslash
    {  2283, 0x005D,   3,  15,  12,   0,   4,   0,   0, 0x00 }, // bracketright
    {  2313, 0x005E,   6,   6,  11,   0,   6,   0,   0, 0x00 }, // asciicircum
    {  2331, 0x005F,   6,   2,   0,   0,   6,   0,   0, 0x00 }, // underscore
    {  2337, 0x0060,   4,   2,  11,   0,   4,   0,   0, 0x00 }, // grave
    {  2341, 0x0061,   7,   8,   8,   0,   7,  51,   2, 0x00 }, // a
    {  2373, 0x0062,   7,  11,  11,   0,   7,   0,   0, 0x00 }, // b
    {  2417, 0x0063,   7,   8,   8,   0,   7,  53,   1, 0x00 }, // c
    {  2449, 0x0064,   7,  11,  11,   0,   7,  54,   1, 0x00 }, // d
    {  2493, 0x0065,   7,   8,   8,   0,   7,  55,   1, 0x00 }, // e
    {  2525, 0x0066,   5,  11,  11,   0,   5,   0,   0, 0x00 }, // f
    {  2558, 0x0067,   7,  11,   8,   0,   7,  56,   1, 0x00 }, // g
    {  2602, 0x0068,   7,  11,  11,   0,   7,   0,   0, 0x00 }, // h
    {  2646, 0x0069,   3,  11,  11,   0,   3,   0,   0, 0x00 }, // i
    {  2668, 0x006A,   4,  14,  11,  -1,   3,   0,   0, 0x00 }, // j
    {  2696, 0x006B,   7,  11,  11,   0,   7,   0,   0, 0x00 }, // k
    {  2740, 0x006C,   3,  11,  11,   0,   3,   0,   0, 0x00 }, // l
    {  2762, 0x006D,  11,   8,   8,   0,  11,  57,   1, 0x00 }, // m
    {  2810, 0x006E,   7,   8,   8,   0,   7,  58,   1, 0x00 }, // n
    {  2842, 0x006F,   7,   8,   8,   0,   7,  59,   1, 0x00 }, // o
    {  2874, 0x0070,   7,  11,   8,   0,   7,  60,   1, 0x00 }, // p
    {  2918, 0x0071,   7,  11,   8,   0,   7,  61,   1, 0x00 }, // q
    {  2962, 0x0072,   5,   8,   8,   0,   5,  62,   1, 0x00 }, // r
    {  2986, 0x0073,   6,   8,   8,   0,   7,  63,   1, 0x00 }, // s
    {  3010, 0x0074,   5,  10,  10,   0,   5,   0,   0, 0x00 }, // t
    {  3040, 0x0075,   7,   8,   8,   0,   7,  64,   1, 0x00 }, // u
    {  3072, 0x0076,   7,   8,   8,   0,   7,  65,   2, 0x00 }, // v
    {  3104, 0x0077,  10,   8,   8,   0,  10,  67,   1, 0x00 }, // w
    {  3144, 0x0078,   7,   8,   8,   0,   7,  68,   1, 0x00 }, // x
    {  3176, 0x0079,   7,  11,   8,   0,   7,  69,   2, 0x00 }, // y
    {  3220, 0x007A,   6,   8,   8,   0,   6,   0,   0, 0x00 }, // z
    {  3244, 0x007B,   4,  15,  12,   0,   4,   0,   0, 0x00 }, // braceleft
    {  3274, 0x007C,   2,  13,  11,   1,   3,   0,   0, 0x00 }, // bar
    {  3287, 0x007D,   4,  15,  12,   0,   4,   0,   0, 0x00 }, // braceright
    {  3317, 0x007E,   8,   4,   6,   0,   9,   0,   0, 0x00 }  // asciitilde
};

// RobotoCondensed_Regular_15_4bpp
FONT_TABLE_LOCATION_FLASH_PRAGMA
KEEP extern const touchgfx::GlyphNode glyphs_RobotoCondensed_Regular_15_4bpp[] FONT_TABLE_LOCATION_FLASH_ATTRIBUTE;
FONT_GLYPH_LOCATION_FLASH_PRAGMA
KEEP extern const uint8_t unicodes_RobotoCondensed_Regular_15_4bpp_0[] FONT_GLYPH_LOCATION_FLASH_ATTRIBUTE;
FONT_SEARCHTABLE_LOCATION_FLASH_PRAGMA
KEEP extern const uint8_t* const unicodes_RobotoCondensed_Regular_15_4bpp[] FONT_SEARCHTABLE_LOCATION_FLASH_ATTRIBUTE = {
    unicodes_RobotoCondensed_Regular_15_4bpp_0
};
FONT_KERNING_LOCATION_FLASH_PRAGMA
KEEP extern const touchgfx::KerningNode kerning_RobotoCondensed_Regular_15_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_RobotoCondensed_Regular_15_4bpp();

touchgfx::GeneratedFont& getFont_RobotoCondensed_Regular_15_4bpp()
{
    static touchgfx::GeneratedFont RobotoCondensed_Regular_15_4bpp(glyphs_RobotoCondensed_Regular_15_4bpp, 95, 19, 15, 0, 0, 4, 1, 1, 1, unicodes_RobotoCondensed_Regular_15_4bpp, kerning_RobotoCondensed_Regular_15_4bpp, 63, 0, 0, 0);
    return RobotoCondensed_Regular_15_4bpp;
}
