// Autogenerated, do not edit

#include <fonts/GeneratedFont.hpp>

FONT_TABLE_LOCATION_FLASH_PRAGMA
KEEP extern const touchgfx::GlyphNode glyphs_RobotoCondensed_Regular_20_4bpp[] FONT_TABLE_LOCATION_FLASH_ATTRIBUTE = {
    {     0, 0x0020,   0,   0,   0,   0,   4,   0,   0, 0x00 }, // space
    {     0, 0x0021,   3,  15,  15,   1,   5,   0,   0, 0x00 }, // exclam
    {    30, 0x0022,   5,   5,  16,   0,   6,   0,   5, 0x00 }, // quotedbl
    {    45, 0x0023,  10,  15,  15,   0,  10,   0,   0, 0x00 }, // numbersign
    {   120, 0x0024,   8,  19,  17,   1,  10,   0,   0, 0x00 }, // dollar
    {   196, 0x0025,  13,  15,  15,   0,  13,   0,   0, 0x00 }, // percent
    {   301, 0x0026,  11,  15,  15,   0,  11,   0,   0, 0x00 }, // ampersand
    {   391, 0x0027,   3,   5,  16,   0,   3,   5,   5, 0x00 }, // quotesingle
    {   401, 0x0028,   5,  22,  17,   1,   6,   0,   0, 0x00 }, // parenleft
    {   467, 0x0029,   5,  22,  17,   0,   6,   0,   0, 0x00 }, // parenright
    {   533, 0x002A,   8,   9,  15,   0,   8,   0,   0, 0x00 }, // asterisk
    {   569, 0x002B,  10,  11,  12,   0,  10,   0,   0, 0x00 }, // plus
    {   624, 0x002C,   3,   5,   2,   0,   4,  10,  12, 0x00 }, // comma
    {   634, 0x002D,   6,   2,   7,   0,   6,  22,   4, 0x00 }, // hyphen
    {   640, 0x002E,   3,   2,   2,   1,   5,  26,  12, 0x00 }, // period
    {   644, 0x002F,   7,  16,  15,   0,   7,  38,   1, 0x00 }, // slash
    {   708, 0x0030,   9,  15,  15,   0,  10,   0,   0, 0x00 }, // zero
    {   783, 0x0031,   6,  15,  15,   1,  10,   0,   0, 0x00 }, // one
    {   828, 0x0032,   9,  15,  15,   0,  10,   0,   0, 0x00 }, // two
    {   903, 0x0033,   9,  15,  15,   0,  10,   0,   0, 0x00 }, // three
    {   978, 0x0034,  10,  15,  15,   0,  10,   0,   0, 0x00 }, // four
    {  1053, 0x0035,   8,  15,  15,   1,  10,   0,   0, 0x00 }, // five
    {  1113, 0x0036,   9,  15,  15,   1,  10,   0,   0, 0x00 }, // six
    {  1188, 0x0037,   9,  15,  15,   0,  10,   0,   0, 0x00 }, // seven
    {  1263, 0x0038,   9,  15,  15,   0,  10,   0,   0, 0x00 }, // eight
    {  1338, 0x0039,   9,  15,  15,   0,  10,   0,   0, 0x00 }, // nine
    {  1413, 0x003A,   3,  11,  11,   1,   5,   0,   0, 0x00 }, // colon
    {  1435, 0x003B,   3,  14,  11,   1,   5,   0,   0, 0x00 }, // semicolon
    {  1463, 0x003C,   8,   9,  10,   0,   9,   0,   0, 0x00 }, // less
    {  1499, 0x003D,   8,   6,  10,   1,  10,   0,   0, 0x00 }, // equal
    {  1523, 0x003E,   8,   9,  10,   1,   9,   0,   0, 0x00 }, // greater
    {  1559, 0x003F,   8,  15,  15,   0,   8,  39,   1, 0x00 }, // question
    {  1619, 0x0040,  16,  19,  15,   0,  16,   0,   0, 0x00 }, // at
    {  1771, 0x0041,  11,  15,  15,   0,  11,  40,   5, 0x00 }, // A
    {  1861, 0x0042,   9,  15,  15,   1,  11,   0,   0, 0x00 }, // B
    {  1936, 0x0043,  10,  15,  15,   0,  11,  45,   1, 0x00 }, // C
    {  2011, 0x0044,  10,  15,  15,   1,  11,   0,   0, 0x00 }, // D
    {  2086, 0x0045,   9,  15,  15,   1,  10,   0,   0, 0x00 }, // E
    {  2161, 0x0046,   9,  15,  15,   1,  10,   0,   0, 0x00 }, // F
    {  2236, 0x0047,  10,  15,  15,   1,  12,  46,   1, 0x00 }, // G
    {  2311, 0x0048,  10,  15,  15,   1,  12,   0,   0, 0x00 }, // H
    {  2386, 0x0049,   3,  15,  15,   1,   5,   0,   0, 0x00 }, // I
    {  2416, 0x004A,   9,  15,  15,   0,  10,  47,   4, 0x00 }, // J
    {  2491, 0x004B,  10,  15,  15,   1,  11,   0,   0, 0x00 }, // K
    {  2566, 0x004C,   8,  15,  15,   1,   9,   0,   0, 0x00 }, // L
    {  2626, 0x004D,  13,  15,  15,   1,  14,   0,   0, 0x00 }, // M
    {  2731, 0x004E,  10,  15,  15,   1,  12,   0,   0, 0x00 }, // N
    {  2806, 0x004F,  11,  15,  15,   0,  11,  51,   1, 0x00 }, // O
    {  2896, 0x0050,  10,  15,  15,   1,  11,   0,   0, 0x00 }, // P
    {  2971, 0x0051,  12,  17,  15,   0,  12,  52,   1, 0x00 }, // Q
    {  3073, 0x0052,  10,  15,  15,   1,  11,   0,   0, 0x00 }, // R
    {  3148, 0x0053,  10,  15,  15,   0,  11,   0,   0, 0x00 }, // S
    {  3223, 0x0054,  10,  15,  15,   0,  10,  53,   3, 0x00 }, // T
    {  3298, 0x0055,  10,  15,  15,   1,  11,  56,   2, 0x00 }, // U
    {  3373, 0x0056,  11,  15,  15,   0,  11,  58,   2, 0x00 }, // V
    {  3463, 0x0057,  15,  15,  15,   0,  15,  60,   2, 0x00 }, // W
    {  3583, 0x0058,  11,  15,  15,   0,  11,   0,   0, 0x00 }, // X
    {  3673, 0x0059,  11,  15,  15,   0,  11,  62,   3, 0x00 }, // Y
    {  3763, 0x005A,  10,  15,  15,   0,  10,   0,   0, 0x00 }, // Z
    {  3838, 0x005B,   4,  20,  17,   1,   5,   0,   0, 0x00 }, // bracketleft
    {  3878, 0x005C,   8,  16,  15,   0,   7,   0,   0, 0x00 }, // backslash
    {  3942, 0x005D,   4,  20,  17,   0,   5,   0,   0, 0x00 }, // bracketright
    {  3982, 0x005E,   7,   8,  15,   0,   7,   0,   0, 0x00 }, // asciicircum
    {  4014, 0x005F,   8,   2,   0,   0,   8,   0,   0, 0x00 }, // underscore
    {  4022, 0x0060,   4,   3,  15,   1,   6,   0,   0, 0x00 }, // grave
    {  4028, 0x0061,   9,  11,  11,   0,   9,  65,   2, 0x00 }, // a
    {  4083, 0x0062,   8,  16,  16,   1,  10,   0,   0, 0x00 }, // b
    {  4147, 0x0063,   9,  11,  11,   0,   9,  67,   2, 0x00 }, // c
    {  4202, 0x0064,   9,  16,  16,   0,  10,  69,   2, 0x00 }, // d
    {  4282, 0x0065,   9,  11,  11,   0,   9,  71,   2, 0x00 }, // e
    {  4337, 0x0066,   7,  16,  16,   0,   6,   0,   0, 0x00 }, // f
    {  4401, 0x0067,   9,  15,  11,   0,  10,  73,   2, 0x00 }, // g
    {  4476, 0x0068,   8,  16,  16,   1,  10,   0,   0, 0x00 }, // h
    {  4540, 0x0069,   3,  16,  16,   1,   5,   0,   0, 0x00 }, // i
    {  4572, 0x006A,   5,  20,  16,  -1,   5,   0,   0, 0x00 }, // j
    {  4632, 0x006B,   8,  16,  16,   1,   9,   0,   0, 0x00 }, // k
    {  4696, 0x006C,   3,  16,  16,   1,   5,   0,   0, 0x00 }, // l
    {  4728, 0x006D,  13,  11,  11,   1,  15,  75,   1, 0x00 }, // m
    {  4805, 0x006E,   8,  11,  11,   1,  10,  76,   1, 0x00 }, // n
    {  4849, 0x006F,   9,  11,  11,   0,  10,  77,   2, 0x00 }, // o
    {  4904, 0x0070,   8,  15,  11,   1,  10,  79,   1, 0x00 }, // p
    {  4964, 0x0071,   9,  15,  11,   0,  10,  80,   2, 0x00 }, // q
    {  5039, 0x0072,   5,  11,  11,   1,   6,  82,   1, 0x00 }, // r
    {  5072, 0x0073,   8,  11,  11,   0,   9,  83,   2, 0x00 }, // s
    {  5116, 0x0074,   6,  14,  14,   0,   6,   0,   0, 0x00 }, // t
    {  5158, 0x0075,   8,  11,  11,   1,  10,  85,   1, 0x00 }, // u
    {  5202, 0x0076,   9,  11,  11,   0,   9,  86,   2, 0x00 }, // v
    {  5257, 0x0077,  13,  11,  11,   0,  13,  88,   3, 0x00 }, // w
    {  5334, 0x0078,   9,  11,  11,   0,   9,  91,   1, 0x00 }, // x
    {  5389, 0x0079,   9,  15,  11,   0,   9,  92,   2, 0x00 }, // y
    {  5464, 0x007A,   8,  11,  11,   0,   8,  94,   1, 0x00 }, // z
    {  5508, 0x007B,   6,  21,  17,   0,   6,   0,   0, 0x00 }, // braceleft
    {  5571, 0x007C,   2,  17,  15,   1,   4,   0,   0, 0x00 }, // bar
    {  5588, 0x007D,   6,  21,  17,   0,   6,   0,   0, 0x00 }, // braceright
    {  5651, 0x007E,  10,   4,   8,   1,  11,   0,   0, 0x00 }, // asciitilde
    {  5671, 0x00A1,   3,  15,  11,   1,   5,   0,   0, 0x00 }, // exclamdown
    {  5701, 0x00A2,   9,  16,  14,   0,  10,   0,   0, 0x00 }, // cent
    {  5781, 0x00A3,  10,  15,  15,   0,  10,   0,   0, 0x00 }, // sterling
    {  5856, 0x00A5,  10,  15,  15,   0,  10,   0,   0, 0x00 }, // yen
    {  5931, 0x00A9,  14,  16,  15,   0,  14,   0,   0, 0x00 }, // copyright
    {  6043, 0x00AE,  14,  16,  15,   0,  14,   0,   0, 0x00 }, // registered
    {  6155, 0x00B1,   9,  13,  13,   0,  10,   0,   0, 0x00 }, // plusminus
    {  6220, 0x00B4,   4,   3,  15,   1,   6,   0,   0, 0x00 }, // acute
    {  6226, 0x00BA,   6,   7,  14,   1,   8,   0,   0, 0x00 }, // ordmasculine
    {  6247, 0x00BF,   9,  15,  11,   0,   9,   0,   0, 0x00 }, // questiondown
    {  6322, 0x00D7,   9,  10,  12,   0,  10,   0,   0, 0x00 }, // multiply
    {  6372, 0x00F7,   9,  10,  12,   0,  10,   0,   0, 0x00 }, // divide
    {     0, 0x201D,   6,   6,  16,   0,   6,  95,   5, 0x00 }, // quotedblright
    {    18, 0x2022,   5,   5,  10,   1,   6,   0,   0, 0x00 }, // bullet
    {    33, 0x20AC,   9,  15,  15,   0,   9,   0,   0, 0x00 }  // Euro
};

// RobotoCondensed_Regular_20_4bpp
FONT_TABLE_LOCATION_FLASH_PRAGMA
KEEP extern const touchgfx::GlyphNode glyphs_RobotoCondensed_Regular_20_4bpp[] FONT_TABLE_LOCATION_FLASH_ATTRIBUTE;
FONT_GLYPH_LOCATION_FLASH_PRAGMA
KEEP extern const uint8_t unicodes_RobotoCondensed_Regular_20_4bpp_0[] FONT_GLYPH_LOCATION_FLASH_ATTRIBUTE;
FONT_GLYPH_LOCATION_FLASH_PRAGMA
KEEP extern const uint8_t unicodes_RobotoCondensed_Regular_20_4bpp_4[] FONT_GLYPH_LOCATION_FLASH_ATTRIBUTE;
FONT_SEARCHTABLE_LOCATION_FLASH_PRAGMA
KEEP extern const uint8_t* const unicodes_RobotoCondensed_Regular_20_4bpp[] FONT_SEARCHTABLE_LOCATION_FLASH_ATTRIBUTE = {
    unicodes_RobotoCondensed_Regular_20_4bpp_0,
    0,
    0,
    0,
    unicodes_RobotoCondensed_Regular_20_4bpp_4
};
FONT_KERNING_LOCATION_FLASH_PRAGMA
KEEP extern const touchgfx::KerningNode kerning_RobotoCondensed_Regular_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_RobotoCondensed_Regular_20_4bpp();

touchgfx::GeneratedFont& getFont_RobotoCondensed_Regular_20_4bpp()
{
    static touchgfx::GeneratedFont RobotoCondensed_Regular_20_4bpp(glyphs_RobotoCondensed_Regular_20_4bpp, 110, 25, 20, 0, 0, 4, 1, 1, 1, unicodes_RobotoCondensed_Regular_20_4bpp, kerning_RobotoCondensed_Regular_20_4bpp, 63, 0, 0, 0);
    return RobotoCondensed_Regular_20_4bpp;
}
