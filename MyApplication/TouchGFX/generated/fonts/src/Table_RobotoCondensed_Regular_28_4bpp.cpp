// Autogenerated, do not edit

#include <fonts/GeneratedFont.hpp>

FONT_TABLE_LOCATION_FLASH_PRAGMA
KEEP extern const touchgfx::GlyphNode glyphs_RobotoCondensed_Regular_28_4bpp[] FONT_TABLE_LOCATION_FLASH_ATTRIBUTE = {
    {     0, 0x0020,   0,   0,   0,   0,   6,   0,   0, 0x00 }, // space
    {     0, 0x0021,   4,  20,  20,   1,   6,   0,   0, 0x00 }, // exclam
    {    40, 0x0022,   6,   7,  21,   1,   8,   0,   5, 0x00 }, // quotedbl
    {    61, 0x0023,  14,  20,  20,   0,  15,   0,   0, 0x00 }, // numbersign
    {   201, 0x0024,  12,  26,  23,   1,  14,   0,   0, 0x00 }, // dollar
    {   357, 0x0025,  17,  20,  20,   1,  18,   0,   0, 0x00 }, // percent
    {   537, 0x0026,  16,  20,  20,   0,  16,   0,   0, 0x00 }, // ampersand
    {   697, 0x0027,   3,   7,  21,   1,   4,   5,   5, 0x00 }, // quotesingle
    {   711, 0x0028,   7,  29,  22,   1,   8,   0,   0, 0x00 }, // parenleft
    {   827, 0x0029,   7,  29,  22,   0,   8,   0,   0, 0x00 }, // parenright
    {   943, 0x002A,  11,  12,  20,   0,  11,  10,   1, 0x00 }, // asterisk
    {  1015, 0x002B,  13,  15,  17,   0,  14,   0,   0, 0x00 }, // plus
    {  1120, 0x002C,   5,   7,   3,   0,   5,  11,  12, 0x00 }, // comma
    {  1141, 0x002D,   7,   3,  10,   1,   8,  23,   5, 0x00 }, // hyphen
    {  1153, 0x002E,   4,   3,   3,   1,   7,  28,  12, 0x00 }, // period
    {  1159, 0x002F,   9,  22,  20,   0,   9,  40,   1, 0x00 }, // slash
    {  1269, 0x0030,  12,  20,  20,   1,  14,   0,   0, 0x00 }, // zero
    {  1389, 0x0031,   8,  20,  20,   1,  14,   0,   0, 0x00 }, // one
    {  1469, 0x0032,  12,  20,  20,   1,  14,   0,   0, 0x00 }, // two
    {  1589, 0x0033,  12,  20,  20,   1,  14,   0,   0, 0x00 }, // three
    {  1709, 0x0034,  13,  20,  20,   0,  14,   0,   0, 0x00 }, // four
    {  1849, 0x0035,  12,  20,  20,   1,  14,   0,   0, 0x00 }, // five
    {  1969, 0x0036,  12,  20,  20,   1,  14,   0,   0, 0x00 }, // six
    {  2089, 0x0037,  13,  20,  20,   0,  14,   0,   0, 0x00 }, // seven
    {  2229, 0x0038,  12,  20,  20,   1,  14,   0,   0, 0x00 }, // eight
    {  2349, 0x0039,  12,  20,  20,   1,  14,   0,   0, 0x00 }, // nine
    {  2469, 0x003A,   4,  15,  15,   1,   7,   0,   0, 0x00 }, // colon
    {  2499, 0x003B,   4,  19,  15,   1,   6,   0,   0, 0x00 }, // semicolon
    {  2537, 0x003C,  11,  13,  14,   0,  12,   0,   0, 0x00 }, // less
    {  2615, 0x003D,  11,   8,  13,   1,  14,   0,   0, 0x00 }, // equal
    {  2663, 0x003E,  11,  13,  14,   1,  13,   0,   0, 0x00 }, // greater
    {  2741, 0x003F,  11,  20,  20,   0,  12,  41,   1, 0x00 }, // question
    {  2861, 0x0040,  21,  26,  20,   1,  22,   0,   0, 0x00 }, // at
    {  3147, 0x0041,  16,  20,  20,   0,  16,  42,   6, 0x00 }, // A
    {  3307, 0x0042,  14,  20,  20,   1,  15,   0,   0, 0x00 }, // B
    {  3447, 0x0043,  13,  20,  20,   1,  15,  48,   1, 0x00 }, // C
    {  3587, 0x0044,  14,  20,  20,   1,  16,   0,   0, 0x00 }, // D
    {  3727, 0x0045,  13,  20,  20,   1,  14,   0,   0, 0x00 }, // E
    {  3867, 0x0046,  13,  20,  20,   1,  14,   0,   0, 0x00 }, // F
    {  4007, 0x0047,  14,  20,  20,   1,  16,  49,   1, 0x00 }, // G
    {  4147, 0x0048,  15,  20,  20,   1,  17,   0,   0, 0x00 }, // H
    {  4307, 0x0049,   3,  20,  20,   2,   7,   0,   0, 0x00 }, // I
    {  4347, 0x004A,  12,  20,  20,   0,  14,  50,   4, 0x00 }, // J
    {  4467, 0x004B,  15,  20,  20,   1,  15,   0,   0, 0x00 }, // K
    {  4627, 0x004C,  12,  20,  20,   1,  13,   0,   0, 0x00 }, // L
    {  4747, 0x004D,  18,  20,  20,   1,  20,   0,   0, 0x00 }, // M
    {  4927, 0x004E,  15,  20,  20,   1,  17,   0,   0, 0x00 }, // N
    {  5087, 0x004F,  14,  20,  20,   1,  16,  54,   1, 0x00 }, // O
    {  5227, 0x0050,  14,  20,  20,   1,  15,   0,   0, 0x00 }, // P
    {  5367, 0x0051,  15,  23,  20,   1,  17,  55,   1, 0x00 }, // Q
    {  5551, 0x0052,  14,  20,  20,   1,  16,   0,   0, 0x00 }, // R
    {  5691, 0x0053,  13,  20,  20,   1,  15,   0,   0, 0x00 }, // S
    {  5831, 0x0054,  14,  20,  20,   0,  14,  56,   4, 0x00 }, // T
    {  5971, 0x0055,  14,  20,  20,   1,  16,  60,   2, 0x00 }, // U
    {  6111, 0x0056,  15,  20,  20,   0,  15,  62,   2, 0x00 }, // V
    {  6271, 0x0057,  21,  20,  20,   0,  21,  64,   2, 0x00 }, // W
    {  6491, 0x0058,  15,  20,  20,   0,  15,   0,   0, 0x00 }, // X
    {  6651, 0x0059,  15,  20,  20,   0,  15,  66,   6, 0x00 }, // Y
    {  6811, 0x005A,  12,  20,  20,   1,  14,   0,   0, 0x00 }, // Z
    {  6931, 0x005B,   6,  28,  24,   1,   7,   0,   0, 0x00 }, // bracketleft
    {  7015, 0x005C,  10,  22,  20,   0,  10,   0,   0, 0x00 }, // backslash
    {  7125, 0x005D,   6,  28,  24,   0,   7,   0,   0, 0x00 }, // bracketright
    {  7209, 0x005E,  10,  10,  20,   0,  10,   0,   0, 0x00 }, // asciicircum
    {  7259, 0x005F,  11,   3,   1,   0,  11,   0,   0, 0x00 }, // underscore
    {  7277, 0x0060,   6,   4,  20,   1,   8,   0,   0, 0x00 }, // grave
    {  7289, 0x0061,  11,  15,  15,   1,  13,  72,   3, 0x00 }, // a
    {  7379, 0x0062,  12,  21,  21,   1,  14,   0,   0, 0x00 }, // b
    {  7505, 0x0063,  11,  15,  15,   1,  13,  75,   3, 0x00 }, // c
    {  7595, 0x0064,  11,  21,  21,   1,  14,  78,   3, 0x00 }, // d
    {  7721, 0x0065,  11,  15,  15,   1,  13,  81,   3, 0x00 }, // e
    {  7811, 0x0066,   9,  21,  21,   0,   9,   0,   0, 0x00 }, // f
    {  7916, 0x0067,  11,  21,  15,   1,  14,  84,   3, 0x00 }, // g
    {  8042, 0x0068,  12,  21,  21,   1,  14,   0,   0, 0x00 }, // h
    {  8168, 0x0069,   4,  21,  21,   1,   6,   0,   0, 0x00 }, // i
    {  8210, 0x006A,   6,  27,  21,  -1,   6,   0,   0, 0x00 }, // j
    {  8291, 0x006B,  12,  21,  21,   1,  13,   0,   0, 0x00 }, // k
    {  8417, 0x006C,   4,  21,  21,   1,   6,   0,   0, 0x00 }, // l
    {  8459, 0x006D,  19,  15,  15,   1,  21,  87,   2, 0x00 }, // m
    {  8609, 0x006E,  12,  15,  15,   1,  14,  89,   2, 0x00 }, // n
    {  8699, 0x006F,  12,  15,  15,   1,  14,  91,   3, 0x00 }, // o
    {  8789, 0x0070,  12,  21,  15,   1,  14,  94,   2, 0x00 }, // p
    {  8915, 0x0071,  11,  21,  15,   1,  14,  96,   3, 0x00 }, // q
    {  9041, 0x0072,   8,  15,  15,   1,   9,  99,   2, 0x00 }, // r
    {  9101, 0x0073,  11,  15,  15,   1,  12, 101,   2, 0x00 }, // s
    {  9191, 0x0074,   8,  19,  19,   0,   9,   0,   0, 0x00 }, // t
    {  9267, 0x0075,  12,  15,  15,   1,  14, 103,   3, 0x00 }, // u
    {  9357, 0x0076,  12,  15,  15,   0,  12, 106,   4, 0x00 }, // v
    {  9447, 0x0077,  18,  15,  15,   0,  18, 110,   3, 0x00 }, // w
    {  9582, 0x0078,  12,  15,  15,   0,  12, 113,   1, 0x00 }, // x
    {  9672, 0x0079,  12,  21,  15,   0,  12, 114,   4, 0x00 }, // y
    {  9798, 0x007A,  10,  15,  15,   1,  12, 118,   1, 0x00 }, // z
    {  9873, 0x007B,   8,  28,  22,   0,   8,   0,   0, 0x00 }, // braceleft
    {  9985, 0x007C,   2,  24,  20,   2,   6,   0,   0, 0x00 }, // bar
    { 10009, 0x007D,   8,  28,  22,   0,   8,   0,   0, 0x00 }, // braceright
    { 10121, 0x007E,  14,   6,  11,   1,  16,   0,   0, 0x00 }, // asciitilde
    { 10163, 0x00A1,   4,  20,  15,   1,   6,   0,   0, 0x00 }, // exclamdown
    { 10203, 0x00A2,  12,  22,  19,   1,  14,   0,   0, 0x00 }, // cent
    { 10335, 0x00A3,  13,  20,  20,   1,  14,   0,   0, 0x00 }, // sterling
    { 10475, 0x00A5,  14,  20,  20,   0,  15,   0,   0, 0x00 }, // yen
    { 10615, 0x00A9,  18,  22,  21,   1,  20,   0,   0, 0x00 }, // copyright
    { 10813, 0x00AE,  18,  22,  21,   1,  20,   0,   0, 0x00 }, // registered
    { 11011, 0x00B1,  12,  17,  17,   1,  13,   0,   0, 0x00 }, // plusminus
    { 11113, 0x00B4,   6,   4,  21,   1,   8,   0,   0, 0x00 }, // acute
    { 11125, 0x00BA,   9,  11,  20,   1,  11,   0,   0, 0x00 }, // ordmasculine
    { 11180, 0x00BF,  11,  21,  15,   1,  12,   0,   0, 0x00 }, // questiondown
    { 11306, 0x00D7,  12,  13,  16,   1,  13,   0,   0, 0x00 }, // multiply
    { 11384, 0x00F7,  13,  14,  17,   0,  14,   0,   0, 0x00 }, // divide
    {     0, 0x201D,   7,   8,  21,   1,   9, 119,   5, 0x00 }, // quotedblright
    {    32, 0x2022,   7,   7,  14,   1,   9, 124,   1, 0x00 }, // bullet
    {    60, 0x20AC,  11,  20,  20,   1,  13,   0,   0, 0x00 }  // Euro
};

// RobotoCondensed_Regular_28_4bpp
FONT_TABLE_LOCATION_FLASH_PRAGMA
KEEP extern const touchgfx::GlyphNode glyphs_RobotoCondensed_Regular_28_4bpp[] FONT_TABLE_LOCATION_FLASH_ATTRIBUTE;
FONT_GLYPH_LOCATION_FLASH_PRAGMA
KEEP extern const uint8_t unicodes_RobotoCondensed_Regular_28_4bpp_0[] FONT_GLYPH_LOCATION_FLASH_ATTRIBUTE;
FONT_GLYPH_LOCATION_FLASH_PRAGMA
KEEP extern const uint8_t unicodes_RobotoCondensed_Regular_28_4bpp_4[] FONT_GLYPH_LOCATION_FLASH_ATTRIBUTE;
FONT_SEARCHTABLE_LOCATION_FLASH_PRAGMA
KEEP extern const uint8_t* const unicodes_RobotoCondensed_Regular_28_4bpp[] FONT_SEARCHTABLE_LOCATION_FLASH_ATTRIBUTE = {
    unicodes_RobotoCondensed_Regular_28_4bpp_0,
    0,
    0,
    0,
    unicodes_RobotoCondensed_Regular_28_4bpp_4
};
FONT_KERNING_LOCATION_FLASH_PRAGMA
KEEP extern const touchgfx::KerningNode kerning_RobotoCondensed_Regular_28_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_RobotoCondensed_Regular_28_4bpp();

touchgfx::GeneratedFont& getFont_RobotoCondensed_Regular_28_4bpp()
{
    static touchgfx::GeneratedFont RobotoCondensed_Regular_28_4bpp(glyphs_RobotoCondensed_Regular_28_4bpp, 110, 35, 28, 0, 0, 4, 1, 1, 1, unicodes_RobotoCondensed_Regular_28_4bpp, kerning_RobotoCondensed_Regular_28_4bpp, 63, 0, 0, 0);
    return RobotoCondensed_Regular_28_4bpp;
}
