/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SCREEN4VIEWBASE_HPP
#define SCREEN4VIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/screen4_screen/Screen4Presenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <touchgfx/widgets/BoxWithBorder.hpp>
#include <touchgfx/widgets/graph/Graph.hpp>
#include <touchgfx/widgets/graph/GraphElements.hpp>
#include <touchgfx/widgets/graph/GraphLabels.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565.hpp>
#include <touchgfx/containers/SlideMenu.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>

class Screen4ViewBase : public touchgfx::View<Screen4Presenter>
{
public:
    Screen4ViewBase();
    virtual ~Screen4ViewBase();
    virtual void setupScreen();
    virtual void afterTransition();

    /*
     * Virtual Action Handlers
     */
    virtual void AddSquarewave()
    {
        // Override and implement this function in Screen4
    }
    virtual void Frequencyclicked()
    {
        // Override and implement this function in Screen4
    }
    virtual void okclicked()
    {
        // Override and implement this function in Screen4
    }
    virtual void exitclicked()
    {
        // Override and implement this function in Screen4
    }
    virtual void Amplitudeclicked()
    {
        // Override and implement this function in Screen4
    }
    virtual void OffsetClicked()
    {
        // Override and implement this function in Screen4
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Image image1;
    touchgfx::Box box1;
    touchgfx::TextArea textArea9;
    touchgfx::IconButtonStyle< touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  >  backbutton1;
    touchgfx::BoxWithBorder boxWithBorder2;
    touchgfx::BoxWithBorder boxWithBorder1;
    touchgfx::TextArea textArea10;
    touchgfx::TextArea textArea8;
    touchgfx::Graph<197> graph3;
    touchgfx::GraphElementGridX graph3MinorXAxisGrid;
    touchgfx::GraphElementGridY graph3MinorYAxisGrid;
    touchgfx::GraphElementGridX graph3MajorXAxisGrid;
    touchgfx::GraphElementGridY graph3MajorYAxisGrid;
    touchgfx::GraphLabelsX graph3MajorXAxisLabel;
    touchgfx::GraphLabelsY graph3MajorYAxisLabel;
    touchgfx::GraphElementLine graph3Line1;
    touchgfx::PainterRGB565 graph3Line1Painter;
    touchgfx::SlideMenu slideMenu1;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  flexButton1;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  flexButton2;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  flexButton3;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  flexButton4;
    touchgfx::TextArea textArea7;
    touchgfx::TextArea textArea6;
    touchgfx::TextArea textArea4_1;
    touchgfx::TextArea textArea5;
    touchgfx::TextAreaWithOneWildcard frequency;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  ok;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  exit;
    touchgfx::TextAreaWithOneWildcard Offset;
    touchgfx::TextAreaWithOneWildcard Amplitude;

    /*
     * Wildcard Buffers
     */
    static const uint16_t FREQUENCY_SIZE = 20;
    touchgfx::Unicode::UnicodeChar frequencyBuffer[FREQUENCY_SIZE];
    static const uint16_t OFFSET_SIZE = 10;
    touchgfx::Unicode::UnicodeChar OffsetBuffer[OFFSET_SIZE];
    static const uint16_t AMPLITUDE_SIZE = 20;
    touchgfx::Unicode::UnicodeChar AmplitudeBuffer[AMPLITUDE_SIZE];

private:

    /*
     * Canvas Buffer Size
     */
    static const uint32_t CANVAS_BUFFER_SIZE = 7200;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];

    /*
     * Callback Declarations
     */
    touchgfx::Callback<Screen4ViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

};

#endif // SCREEN4VIEWBASE_HPP
