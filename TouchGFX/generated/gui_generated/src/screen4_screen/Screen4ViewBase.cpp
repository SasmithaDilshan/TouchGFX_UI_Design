/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen4_screen/Screen4ViewBase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

Screen4ViewBase::Screen4ViewBase() :
    buttonCallback(this, &Screen4ViewBase::buttonCallbackHandler)
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
    
    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    image1.setXY(0, 0);
    image1.setBitmap(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_BACKGROUNDS_480X272_HIVE_ID));
    add(image1);

    flexButton_3.setBoxWithBorderPosition(0, 0, 50, 50);
    flexButton_3.setBorderSize(5);
    flexButton_3.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    flexButton_3.setPosition(408, 37, 50, 50);
    add(flexButton_3);

    boxWithBorder3.setPosition(16, 24, 362, 224);
    boxWithBorder3.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    boxWithBorder3.setBorderColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    boxWithBorder3.setBorderSize(5);
    add(boxWithBorder3);

    graph3.setPosition(15, 24, 363, 224);
    graph3.setScaleX(100);
    graph3.setScaleY(100);
    graph3.setGraphAreaMargin(10, 28, 19, 22);
    graph3.setGraphAreaPadding(2, 6, 0, 6);
    graph3.setGraphRangeX(0, 20);
    graph3.setGraphRangeY(-10, 10);
    graph3MinorXAxisGrid.setColor(touchgfx::Color::getColorFromRGB(252, 252, 252));
    graph3MinorXAxisGrid.setInterval(1);
    graph3MinorXAxisGrid.setLineWidth(1);
    graph3MinorXAxisGrid.setAlpha(35);
    graph3MinorXAxisGrid.setScale(100);
    graph3MinorXAxisGrid.setMajorGrid(graph3MajorXAxisGrid);
    graph3.addGraphElement(graph3MinorXAxisGrid);

    graph3MinorYAxisGrid.setColor(touchgfx::Color::getColorFromRGB(252, 252, 252));
    graph3MinorYAxisGrid.setInterval(1);
    graph3MinorYAxisGrid.setLineWidth(1);
    graph3MinorYAxisGrid.setAlpha(35);
    graph3MinorYAxisGrid.setScale(100);
    graph3MinorYAxisGrid.setMajorGrid(graph3MajorYAxisGrid);
    graph3.addGraphElement(graph3MinorYAxisGrid);

    graph3MajorXAxisGrid.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    graph3MajorXAxisGrid.setInterval(10);
    graph3MajorXAxisGrid.setLineWidth(1);
    graph3MajorXAxisGrid.setAlpha(0);
    graph3MajorXAxisGrid.setScale(100);
    graph3.addGraphElement(graph3MajorXAxisGrid);

    graph3MajorYAxisGrid.setColor(touchgfx::Color::getColorFromRGB(252, 252, 252));
    graph3MajorYAxisGrid.setInterval(10);
    graph3MajorYAxisGrid.setLineWidth(1);
    graph3MajorYAxisGrid.setAlpha(126);
    graph3MajorYAxisGrid.setScale(100);
    graph3.addGraphElement(graph3MajorYAxisGrid);

    graph3MajorXAxisLabel.setInterval(2);
    graph3MajorXAxisLabel.setLabelTypedText(touchgfx::TypedText(T___SINGLEUSE_21DC));
    graph3MajorXAxisLabel.setColor(touchgfx::Color::getColorFromRGB(255, 252, 252));
    graph3MajorXAxisLabel.setScale(100);
    graph3.addBottomElement(graph3MajorXAxisLabel);

    graph3MajorYAxisLabel.setInterval(2);
    graph3MajorYAxisLabel.setLabelTypedText(touchgfx::TypedText(T___SINGLEUSE_CU8Z));
    graph3MajorYAxisLabel.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    graph3MajorYAxisLabel.setScale(100);
    graph3.addLeftElement(graph3MajorYAxisLabel);

    graph3Line1Painter.setColor(touchgfx::Color::getColorFromRGB(251, 255, 5));
    graph3Line1.setPainter(graph3Line1Painter);
    graph3Line1.setLineWidth(1);
    graph3.addGraphElement(graph3Line1);


    add(graph3);

    button1.setXY(378, 168);
    button1.setBitmaps(touchgfx::Bitmap(BITMAP_GLASS_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_GLASS_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_FILL_PRESSED_ID));
    button1.setAction(buttonCallback);
    add(button1);
}

Screen4ViewBase::~Screen4ViewBase()
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Screen4ViewBase::setupScreen()
{

}

void Screen4ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &button1)
    {
        //Interaction2
        //When button1 clicked change screen to Screen5
        //Go to Screen5 with screen transition towards East
        application().gotoScreen5ScreenCoverTransitionEast();
    }
}

void Screen4ViewBase::afterTransition()
{
    //Interaction1
    //When screen transition ends call virtual function
    //Call AddSquarewave
    AddSquarewave();
}
